using Nest;
using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.Text;

namespace BusinessLibrary.Models
{
    public class Doctor
    {

        #region Contructors

        /// <summary>
        /// Default constructor. 
        /// Need for serialization purposes.
        /// </summary>
        public Doctor()
        {
        }

        /// <summary>
        /// Fields constructor.
        /// </summary>
        public Doctor(int id, string name, string password)
        {
            Id = id;
            Name = name;
            Password = password;
        }

        /// <summary>
        /// Clone/Copy constructor.
        /// </summary>
        /// <param name="instance">The object to clone from.</param>
        public Doctor(Doctor instance)
            : this(instance.Id, instance.Name, instance.Password)
        {
        }

        #endregion

        #region Properties

        /// <summary>
        /// Id generated by our system upon creation of a new instance.
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public int Id { get; set; }

        /// <summary>
        /// Name of the doctor.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name 
        { get
           /* {
                return string.Format("{0}", Name);
            } */;
            set; 
        }

        /// <summary>
        /// Password of the doctor.
        /// </summary>
        [JsonProperty(PropertyName = "password")]
        public string Password { get; set; }

        /*/// <summary>
        /// FUll name of the student.
        /// </summary>
        [JsonProperty(PropertyName = "password")]
        public string FullName
        {
            get
            {
                return string.Format("{0} {1}", FirstName, LastName);
            }
        }*/

        #endregion

        #region Methods

        /// <summary>
        /// Overrides the .ToString method.
        /// </summary>
        public override string ToString()
        {
            return Name;
        }

        #endregion

    }
}
