using Nest;
using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.Text;

namespace BusinessLibrary.Models
{
    public class Pickup
    {

        #region Contructors

        /// <summary>
        /// Default constructor. 
        /// Need for serialization purposes.
        /// </summary>
        public Pickup()
        {
        }

        /// <summary>
        /// Fields constructor.
        /// </summary>
        public Pickup(int healthcare_no, int din, string location, string name)
        {
           HealthcareNo= healthcare_no;
           DIN= din;
           Location=location;
           Name=name;
        }

        /// <summary>
        /// Clone/Copy constructor.
        /// </summary>
        /// <param name="instance">The object to clone from.</param>
        public Pickup(Pickup instance)
            : this(instance.HealthcareNo, instance.DIN, instance.Location, instance.Name)
        {
        }

        #endregion

        #region Properties

        /// <summary>
        /// Id generated by our system upon creation of a new instance.
        /// </summary>
        [JsonProperty(PropertyName = "healthcare_no")]
        public int HealthcareNo { get; set; }

        /// <summary>
        /// First name of the student.
        /// </summary>
        [JsonProperty(PropertyName = "din")]
        public int DIN
        { get
           /* {
                return string.Format("{0}", Name);
            } */;
            set; 
        }

        /// <summary>
        /// Last name of the student.
        /// </summary>
        [JsonProperty(PropertyName = "location")]
        public string Location { get; set; }

        /// <summary>
        /// Last name of the student.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /*/// <summary>
        /// FUll name of the student.
        /// </summary>
        [JsonProperty(PropertyName = "password")]
        public string FullName
        {
            get
            {
                return string.Format("{0} {1}", FirstName, LastName);
            }
        }*/

        #endregion

        #region Methods

        /// <summary>
        /// Overrides the .ToString method.
        /// </summary>
        public override string ToString()
        {
            return Name;
        }

        #endregion

    }
}
